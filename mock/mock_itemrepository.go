// Code generated by MockGen. DO NOT EDIT.
// Source: repository/item_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	model "backend/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIItem is a mock of IItem interface.
type MockIItem struct {
	ctrl     *gomock.Controller
	recorder *MockIItemMockRecorder
}

// MockIItemMockRecorder is the mock recorder for MockIItem.
type MockIItemMockRecorder struct {
	mock *MockIItem
}

// NewMockIItem creates a new mock instance.
func NewMockIItem(ctrl *gomock.Controller) *MockIItem {
	mock := &MockIItem{ctrl: ctrl}
	mock.recorder = &MockIItemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIItem) EXPECT() *MockIItemMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockIItem) Add(arg0 *model.Item) (*model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(*model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockIItemMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockIItem)(nil).Add), arg0)
}

// Get mocks base method.
func (m *MockIItem) Get(id int) (*model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIItemMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIItem)(nil).Get), id)
}

// GetAllItems mocks base method.
func (m *MockIItem) GetAllItems() ([]*model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllItems")
	ret0, _ := ret[0].([]*model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllItems indicates an expected call of GetAllItems.
func (mr *MockIItemMockRecorder) GetAllItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllItems", reflect.TypeOf((*MockIItem)(nil).GetAllItems))
}

// NewItem mocks base method.
func (m *MockIItem) NewItem(item *model.Item) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NewItem", item)
}

// NewItem indicates an expected call of NewItem.
func (mr *MockIItemMockRecorder) NewItem(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewItem", reflect.TypeOf((*MockIItem)(nil).NewItem), item)
}
