stages:
  - test
  - build
  - deploy

variables:
  BIN_NAME: to-do-app-backend
  GO_PROJECT: gitlab.comnidadinch/to-do-app-backend

test:
  image: golang:1.17-alpine
  stage: test
  before_script:
    - apk add build-base
    - mkdir -p ${GOPATH}/src/${GO_PROJECT}
    - cp -r ${CI_PROJECT_DIR}/* ${GOPATH}/src/${GO_PROJECT}/
    - cd ${GOPATH}/src/${GO_PROJECT}
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test ./repository ./service ./controller

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:latest"

deploy:
  stage: deploy
  image: google/cloud-sdk
  script:
    - echo $SERVICE_ACCOUNT | base64 -d > ~/encoded_serviceaccount.json
    - gcloud auth activate-service-account --key-file ~/encoded_serviceaccount.json
    - gcloud config set project backend-342522
    - gcloud config set compute/zone us-central1-a
    - gcloud container clusters create cluster-for-backend --num-nodes=3
    - gcloud container clusters get-credentials cluster-for-backend
    - kubectl apply -f backend-app.yaml
